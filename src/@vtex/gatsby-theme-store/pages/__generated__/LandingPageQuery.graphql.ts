
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type LandingPageQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type LandingPageQueryQuery = { content: Maybe<{ blocks: Array<Maybe<{ name: string, props: Maybe<any> }>>, extraBlocks: Array<Maybe<{ blocks: Array<{ name: string, props: Maybe<any> }> }>> }> };


// Query Related Code

export const LandingPageQuery = {
  query: process.env.NODE_ENV === 'production' ? undefined : "query LandingPageQuery {\n  content: vtexCmsPageContent(type: {eq: \"landingPage\"}) {\n    blocks {\n      name\n      props\n    }\n    extraBlocks {\n      blocks {\n        name\n        props\n      }\n    }\n  }\n}\n",
  sha256Hash: "e15318f8ecf1711c43c7dff2785388ffbd739c189c3be28c030bcb1df74d6ea8",
  operationName: "LandingPageQuery",
}

